{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CampService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //must be the port number for the backend api - Tomcat8080\n    this.baseUrl = \"http://localhost:8080/api/camps\";\n  }\n  getCampsList() {\n    return this.httpClient.get(this.baseUrl);\n  }\n  getAll() {\n    return this.httpClient.get(this.baseUrl);\n  }\n  get(id) {\n    return this.httpClient.get(`${this.baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.httpClient.post(this.baseUrl, data);\n  }\n  update(id, data) {\n    return this.httpClient.put(`${this.baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.httpClient.delete(`${this.baseUrl}/${id}`);\n  }\n}\nCampService.ɵfac = function CampService_Factory(t) {\n  return new (t || CampService)(i0.ɵɵinject(i1.HttpClient));\n};\nCampService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CampService,\n  factory: CampService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAH9B;IACQ,YAAO,GAAG,iCAAiC;EAEL;EAE9CC,YAAY;IACR,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAS,IAAI,CAACC,OAAO,CAAC;EAClD;EAGFC,MAAM;IACF,OAAO,IAAI,CAACJ,UAAU,CAACE,GAAG,CAAS,IAAI,CAACC,OAAO,CAAC;EAClD;EAEAD,GAAG,CAACG,EAAO;IACT,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,IAAIE,EAAE,EAAE,CAAC;EACrD;EAEAC,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACP,UAAU,CAACQ,IAAI,CAAC,IAAI,CAACL,OAAO,EAAEI,IAAI,CAAC;EACjD;EAEAE,MAAM,CAACJ,EAAO,EAAEE,IAAS;IACvB,OAAO,IAAI,CAACP,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACP,OAAO,IAAIE,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC3D;EAEAI,MAAM,CAACN,EAAO;IACZ,OAAO,IAAI,CAACL,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACR,OAAO,IAAIE,EAAE,EAAE,CAAC;EACxD;;AA7BSP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["CampService","constructor","httpClient","getCampsList","get","baseUrl","getAll","id","create","data","post","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/christineessma/Desktop/coding/SummerCamp-1/angular-frontend-camp/src/app/camp.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Camp } from './camp';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CampService {\n  //must be the port number for the backend api - Tomcat8080\n  private baseUrl = \"http://localhost:8080/api/camps\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getCampsList(): Observable<Camp[]>{\n      return this.httpClient.get<Camp[]>(this.baseUrl);\n    }\n\n\n  getAll(): Observable<Camp[]> {\n      return this.httpClient.get<Camp[]>(this.baseUrl);\n    }\n\n    get(id: any): Observable<any> {\n      return this.httpClient.get(`${this.baseUrl}/${id}`);\n    }\n\n    create(data: any): Observable<any> {\n      return this.httpClient.post(this.baseUrl, data);\n    }\n\n    update(id: any, data: any): Observable<any> {\n      return this.httpClient.put(`${this.baseUrl}/${id}`, data);\n    }\n\n    delete(id: any): Observable<any> {\n      return this.httpClient.delete(`${this.baseUrl}/${id}`);\n    }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}